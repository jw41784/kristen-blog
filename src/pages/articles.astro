---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

const articles = await getCollection('articles', ({ data }) => {
  return data.draft !== true;
});

const sortedArticles = articles.sort((a, b) => 
  b.data.publishDate.valueOf() - a.data.publishDate.valueOf()
);

// Get all unique tags
const allTags = [...new Set(articles.flatMap(article => article.data.tags))].sort();
---

<BaseLayout title="Articles">
  <div class="max-w-4xl mx-auto">
    <h1 class="text-4xl font-bold mb-8">Articles</h1>
    
    <!-- Tag Filter -->
    <div class="mb-8">
      <h2 class="text-sm font-semibold text-zinc-600 dark:text-zinc-400 mb-3">Filter by topic</h2>
      <div class="flex flex-wrap gap-2">
        <a 
          href="/articles" 
          class="px-3 py-1 text-sm rounded-full bg-zinc-100 dark:bg-zinc-800 hover:bg-teal-100 dark:hover:bg-teal-900 transition-colors"
        >
          All
        </a>
        {allTags.map(tag => (
          <a 
            href={`/tags/${tag.toLowerCase().replace(/\s+/g, '-')}`}
            class="px-3 py-1 text-sm rounded-full bg-zinc-100 dark:bg-zinc-800 hover:bg-teal-100 dark:hover:bg-teal-900 transition-colors"
          >
            {tag}
          </a>
        ))}
      </div>
    </div>
    
    <!-- Articles List -->
    <div class="space-y-8">
      {sortedArticles.length === 0 ? (
        <div class="text-center py-12">
          <p class="text-zinc-600 dark:text-zinc-400">No articles published yet. Check back soon!</p>
        </div>
      ) : (
        sortedArticles.map(article => (
          <article class="border-b border-zinc-200 dark:border-zinc-800 pb-8 last:border-0">
            <a href={`/articles/${article.slug}`} class="group">
              <h2 class="text-2xl font-bold mb-2 group-hover:text-teal-600 dark:group-hover:text-teal-400 transition-colors">
                {article.data.title}
              </h2>
            </a>
            
            <div class="flex items-center gap-4 text-sm text-zinc-600 dark:text-zinc-400 mb-3">
              <time datetime={article.data.publishDate.toISOString()}>
                {article.data.publishDate.toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric'
                })}
              </time>
              <span>â€¢</span>
              <span>{Math.ceil(article.body.split(' ').length / 200)} min read</span>
            </div>
            
            <p class="text-zinc-600 dark:text-zinc-400 mb-4">
              {article.data.description}
            </p>
            
            <div class="flex flex-wrap gap-2">
              {article.data.tags.map(tag => (
                <a 
                  href={`/tags/${tag.toLowerCase().replace(/\s+/g, '-')}`}
                  class="px-2 py-1 text-xs rounded bg-zinc-100 dark:bg-zinc-800 hover:bg-teal-100 dark:hover:bg-teal-900 transition-colors"
                >
                  {tag}
                </a>
              ))}
            </div>
          </article>
        ))
      )}
    </div>
  </div>
</BaseLayout>